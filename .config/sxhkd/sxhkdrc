# Window manipulation
# ______________

# Close window
super + x
	bspc node -c

super + y
    stack_windows
super + shift + y
    pkill -f stack_windows && bspc node @/ -E

# Toggle tiling mode of window
super + shift + t
	bspc node -t {pseudo_tiled,tiled}
super + t
	{bspc node -t floating && window-placer $(bspc query -T -d | grep -o '"state":"floating"' | wc -l),bspc node -t tiled}
# Toggle fullscreen
super + shift + f 
	bspc node -t {fullscreen,tiled}	

# Lock a window from closing
super + Escape
	bspc node -g locked 

### Map or unmap windows (functional equivalent of "minimize")
super + c
    whid dmenu

super + shift + c
    whid hide

#
# Window moving and splitting
# ______________    

# Presel window for splitting in certain direction
alt + ctrl + {a,s,w,d}
	bspc node -p \~{west,south,north,east} -i
alt + ctrl + {h,j,k,l}
	bspc node -p \~{west,south,north,east}
alt + ctrl + {Left,Down,Up,Right}
	bspc node -p \~{west,south,north,east}

		
# go (Shift=move) to desktop (and focus the monitor that the desktop is located on. Bspwm style)
super + {_,shift + }{1-9,0}
    bspc {desktop -f,node -d} ^{1-9,10}

# Select previous / next desktop
super + {m,n}
	bspc desktop -f {prev.occupied,next.occupied} 

#Focus windows by direction, works with multihead
super +  {a,s,w,d}
    focusmover {west,south,north,east}

super +  {h,j,k,l}
    focusmover {west,south,north,east}

super +  {Left,Down,Up,Right}
    focusmover {west,south,north,east}
        	
# Move tiled windows. Moving a tiled window to 
# preselected one moves into preselection instead. 
# Moving out of the screen should move the window to next monitor if possible
super + shift + {a,s,w,d}
	windowgrabber {west,south,north,east}

super + shift + {h,j,k,l}
	windowgrabber {west,south,north,east}
	
# Different style of movement: transplant into window in chosen direction
super + shift + {Left,Down,Up,Right}
	euclid_mover {west,south,north,east}

#resize windows
super + alt + {a,s,w,d}
	bspwm_resize.sh {west,south,north,east}

super + alt + {h,j,k,l}
	bspwm_resize.sh {west,south,north,east}
	
super + alt + {Left,Down,Up,Right}
	bspwm_resize.sh {west,south,north,east}

#
# Layout manipulation/desktop level controls
# ______________    

# Toggle monocle mode
super + f 
	bspc desktop -l next
	
# Balance tree
super + b
	bspc node @/ -B

# Balance brother node. If you do this on biggest window of the desktop, it usually means balancing all windows with except the biggest.
super + alt + b
	bspc node @brother -B
	
# Undo balancing (equalize windows)
super + ctrl + b
	bspc node @/ -E

# Mirror and flip leaves of tree
super + {comma,period}
	bspc node @/ -F {horizontal,vertical}
	
# Rotate leaves of tree
super + shift + {comma,period}
	bspc node @/ -R {90,270}

# Change window gap
super + alt + button{5,4}
	bspc config -d focused window_gap $((`bspc config -d focused window_gap` {+,-} 2 ))

#Reset window gap
super + alt + button2
    bspc config -d focused window_gap -$gap

~button1

~button3
	
super + space
	dmenu_run

super + Return
  st
super + z
	st -e tmux

super + shift + f
	firefox
super + shift + o
	xtrlock

alt + space
	bspc rule -a \* -o state=floating && st

super 
        
	
# make sxhkd reload its configuration files:
super + shift + Escape
	pkill -USR1 -x sxhkd

# In case bspwmrc fails to execute/you wish have plugged in a new monitor
super + shift + r
	./bspwmrc

super + F6
	xbacklight -dec 15
super + F7
    xbacklight -inc 15
super + F8
	amixer -c 0 set Headphone toggle
super + F9
	amixer -c 0 set Headphone 10- unmute
super + F10
	amixer -c 0 set Headphone 10+ unmute
